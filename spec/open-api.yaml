openapi: '3.0.0'
info:
  version: 1.0.0
  title: School Lunch API
servers:
  - url: http://localhost:8080/v1
    description: Local server
tags:
  - name: City
    description: City related endpoints
  - name: Menu
    description: Menu related endpoints
  - name: Dish
    description: Dish related endpoints
  - name: Menu with Dishes
    description: Menu with Dishes related endpoints
  - name: Basic Menu
    description: Basic Menu related endpoints not including dishes
paths:
  /cities/{cityCode}:
    get:
      tags:
        - City
      summary: Get details of a specific city
      parameters:
        - name: cityCode
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /cities:
    get:
      tags:
        - City
      summary: Get a list of cities
      parameters:
        - name: search
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cities/prefectures/{prefectureCode}:
    get:
      tags:
        - City
      summary: Get a list of cities in a specific prefecture
      parameters:
        - name: prefectureCode
          in: path
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cities/{cityCode}/menus:
    get:
      tags:
        - Menu
        - Menu with Dishes
      summary: Get a list of menus and their dishes for a specific city
      parameters:
        - name: cityCode
          in: path
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: offered
          in: query
          required: true
          schema:
            type: string
            format: date
          description: The date of the menu.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResMenuWithDishes'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cities/{cityCode}/menus/basic:
    get:
      tags:
        - Menu
        - Basic Menu
      summary: Get a list of basic menu information for a specific city
      parameters:
        - name: cityCode
          in: path
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: offered
          in: query
          required: true
          schema:
            type: string
            format: date
          description: The date of the menu.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResMenus'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cities/{cityCode}/menus/{menuId}:
    get:
      tags:
        - Menu
        - Menu with Dishes
      summary: Get a menu and its dishes for a specific city
      parameters:
        - name: cityCode
          in: path
          required: true
          schema:
            type: integer
        - name: menuId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuWithDishes'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cities/{cityCode}/menus/{menuId}/basic:
    get:
      tags:
        - Menu
      summary: Get a basic menu information for a specific city
      parameters:
        - name: cityCode
          in: path
          required: true
          schema:
            type: integer
        - name: menuId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /menus:
    get:
      tags:
        - Menu
      summary: Get a list of all menus
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: offered
          in: query
          required: true
          schema:
            type: string
            format: date
          description: The date of the menu.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResMenuWithDishes'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /menus/{menuId}/dishes:
    get:
      tags:
        - Dish
      summary: Get a list of dishes for a specific menu in a specific city
      parameters:
        - name: menuId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dish'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /dishes/{dishId}:
    get:
      tags:
        - Dish
      summary: Get a dish for a specific menu and return the ID of the menu that contains that dish.
      parameters:
        - name: dishId
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DishWithMenuIds'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /dishes/{dishId}/menus:
    get:
      tags:
        - Dish
      summary: Get a list of menus that contain a specific dish
      parameters:
        - name: dishId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DishWithMenus'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /dishes:
    get:
      tags:
        - Dish
      summary: Get a list of all dishes
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: search
          in: query
          required: false
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dish'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Menu:
      type: object
      properties:
        id:
          type: string
        offeredAt:
          type: string
          format: date
        photoUrl:
          type: string
        elementarySchoolCalories:
          type: integer
        juniorHighSchoolCalories:
          type: integer
        cityCode:
          type: integer
      required:
        - id
        - offeredAt
        - cityCode
        - elementarySchoolCalories
        - juniorHighSchoolCalories

    Dish:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    DishWithMenuIds:
      type: object
      allOf:
        - $ref: '#/components/schemas/Dish'
        - type: object
          properties:
            menuIds:
              type: array
              items:
                type: string
          required:
            - menuIds
    DishWithMenus:
      type: object
      allOf:
        - $ref: '#/components/schemas/Dish'
        - type: object
          properties:
            menus:
              type: array
              items:
                $ref: '#/components/schemas/Menu'
          required:
            - menus
    MenuWithDishes:
      type: object
      properties:
        id:
          type: string
        offeredAt:
          type: string
          format: date
        photoUrl:
          type: string
        elementarySchoolCalories:
          type: integer
        juniorHighSchoolCalories:
          type: integer
        cityCode:
          type: integer
        dishes:
          type: array
          items:
            $ref: '#/components/schemas/Dish'
      required:
        - id
        - offeredAt
        - cityCode
        - elementarySchoolCalories
        - juniorHighSchoolCalories
        - dishes

    City:
      type: object
      properties:
        cityCode:
          type: integer
        cityName:
          type: string
        prefectureCode:
          type: integer
        prefectureName:
          type: string
        schoolLunchInfoAvailable:
          type: boolean
    ResMenuWithDishes:
      type: object
      properties:
        menus:
          type: array
          items:
            $ref: '#/components/schemas/MenuWithDishes'
        next:
          type: string
          description: The offered_at date of the last menu in the data array
      required:
        - data
    ResMenus:
      type: object
      properties:
        menus:
          type: array
          items:
            $ref: '#/components/schemas/Menu'
        next:
          type: string
          description: The offered_at date of the last menu in the data array
      required:
        - data
    Error:
      type: object
      properties:
        message:
          type: string
